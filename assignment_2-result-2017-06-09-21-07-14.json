{
    "total_points_available": 100,
    "tests": [
        {
            "output": {
                "points_available": 30,
                "points_awarded": 28.5,
                "autograder_comments": "Bidirectional null_heuristic a star search fails benchmarks searching from start to goal\nPath is longer than optimal path\nOn average, number of nodes explored more than the benchmark = 0\nBidirectional euclidean a star search fails benchmarks searching from start to goal\nPath is longer than optimal path\nOn average, number of nodes explored more than the benchmark = 0.0\n",
                "pass_ratio": 0.98375
            },
            "traceback": "Traceback (most recent call last):\n  File \"/home/vmuser_estwfoiq/AIResult.py\", line 26, in func_wrapper\n    ans = func(self)\n  File \"run.py\", line 149, in test_bistar\n    self.assertTrue(tests_pass, \"Bidirectional A Star Tests\")\nAssertionError: Bidirectional A Star Tests\n",
            "description": "Test the bi-directional a star search implementation"
        },
        {
            "output": {
                "points_available": 20,
                "points_awarded": 18.5,
                "autograder_comments": "Bidirectional uniform cost search fails benchmarks searching from start to goal node\nPath is longer than optimal path\nOn average, number of nodes explored more than the benchmark = 0.0\n",
                "pass_ratio": 0.9725
            },
            "traceback": "Traceback (most recent call last):\n  File \"/home/vmuser_estwfoiq/AIResult.py\", line 26, in func_wrapper\n    ans = func(self)\n  File \"run.py\", line 121, in test_biucs\n    self.assertTrue(tests_pass, \"Bidirectional UCS Tests\")\nAssertionError: Bidirectional UCS Tests\n",
            "description": "Test the bi-directional uniform cost search implementation"
        },
        {
            "output": {
                "points_available": 15,
                "points_awarded": 15,
                "autograder_comments": "A star null_heuristic search tests passed\nA star euclidean_dist_heuristic search tests passed\n"
            },
            "traceback": "",
            "description": "Test the a star search implementation"
        },
        {
            "output": {
                "points_available": 10,
                "points_awarded": 10,
                "autograder_comments": "BFS tests passed\n"
            },
            "traceback": "",
            "description": "Test the breadth first search implementation"
        },
        {
            "output": {
                "points_available": 10,
                "points_awarded": 10,
                "autograder_comments": "PriorityQueue tests passed\n"
            },
            "traceback": "",
            "description": "Test the priority queue implementation"
        },
        {
            "output": {
                "points_available": 15,
                "points_awarded": 15,
                "autograder_comments": "Uniform cost search tests passed"
            },
            "traceback": "",
            "description": "Test the uniform cost search implementation"
        }
    ],
    "total_points_awarded": 97.0
}